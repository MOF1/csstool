{"version":3,"sources":["Sections/MinInfo.js","Sections/CssList.js","Sections/Info.js","Sections/Work.js","Page/NotFound.js","Page/Config.js","Utils/utils.js","Components/Loader.js","Modals/AddOption.js","Modals/EditOption.js","Modals/AddConfig.js","Modals/AddLink.js","Modals/EditLink.js","Modals/AddCredit.js","Modals/EditConfig.js","Modals/EditCredit.js","Sections/Preview.js","Sections/ConfigHeader.js","Page/ConfigCreate.js","Modals/About.js","Sections/Nav.js","App.js","index.js"],"names":["MinInfo","css","history","useHistory","className","onClick","push","name","style","backgroundImage","cover","logo","src","alt","site","href","target","rel","repo","getList","a","axios","get","params","t","Date","getTime","response","status","data","console","log","message","Error","CssList","useState","state","setState","useEffect","then","map","item","id","base","Info","description","credits","length","contacts","contact","id2","link","type","getValue","option","options","find","i","default","var","value","raw_value","sleep","ms","Promise","resolve","setTimeout","decimalToHex","alpha","aHex","Math","round","toString","Work","main","match","val","show","getFirstState","onProcess","setProcess","percentage","setPercentage","setStatus","msg","setMsg","genarateConfig","text","raw_value_on_empty","raw_value_on_fill","target_url","responseType","target_type","zip","JSZip","loadAsync","file","target_file","async","prebuiltContent","newContent","generateAsync","content","saveAs","textDecoder","TextDecoder","textEncoder","TextEncoder","decode","Uint8Array","Blob","encode","width","color","title","onChangeComplete","e","hex","rgb","nState","setColor","marginBottom","onChange","o","selected","setOption","checked","htmlFor","trim","setValue","placeholder","hint_image","gotoHome","document","createElement","click","NotFound","class","to","textDecoration","Config","exists","setExists","css_name","useParams","config","setConfig","ele","catch","configs","scan","obj","hasOwnProperty","Array","isArray","obj_optional","aObj","array","arr","array_optional","str","str_optional","scan_config_input","scan_config_select","scan_config_color","scan_config","ret","err","success","j","Loader","setShow","setData","onLoad","setLoad","progress","setProgress","setErr","url","setUrl","localAvail","localStorage","getItem","loadFile","files","getElementById","start","reader","FileReader","readAsText","set_progress","onload","result","JSON","parse","csstData","stop","closePanel","onerror","loadUrl","loadLocal","lC","setItem","display","accept","AddOption","setOptions","setDefaultOption","optionName","setOptionName","rawValue","setRawValue","errMsg","resetData","toLowerCase","setOptionState","EditOption","defaultOption","focusOption","focusIndex","index","nOptions","AddConfig","setConfigs","setName","setDescription","cvar","setCvar","setHint_image","defaultVar","setDefaultVar","raw_on_empty","setRaw_on_empty","raw_on_fill","setRaw_on_fill","setFocusOption","setFocusIndex","showAddOption","setAddOption","showEditOption","setEditOption","defaultColor","setDefaultColor","types","setTypes","getCurrType","changeType","setNameState","undefined","changeOption","curr","reqIndex","gOptions","forEach","splice","deleteOption","configOK","AddLink","links","setLinks","setLink","EditLink","focusLink","nLinks","AddCredit","setCredits","setFocusLink","showAddLink","setAddLink","showEditLink","setEditLink","removeReference","getTypes","getInitial","r","stringify","EditConfig","focusConfigIndex","focusConfig","nConfig","EditCredit","focusCreditIndex","focusCredit","nCredit","Preview","closePreview","ConfigHeader","stack","upStack","setArr","nArr","indexInc","tmp","ConfigCreate","setBase","setMain","showAddCredit","setAddCredit","showEditCredit","setEditCredit","showAddConfig","setAddConfig","showEditConfig","setEditConfig","showLoadPanel","setLoadPanel","setFocusCreditIndex","setFocusCredit","setFocusConfigIndex","setFocusConfig","localSaving","setLocalSaving","configOk","setConfigOk","showPreview","setPreview","raw","getConfig","saveIntoLocal","stackCredit","currIndex","findIndex","stackConfig","required","rIndex","nCredits","removeCredit","removeConfig","gridColumn","About","Nav","location","useLocation","showAbout","setAbout","pathname","preventDefault","openAbout","App","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d17cf60c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Info.css\";\r\n\r\nexport default function MinInfo({ css }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Info InfoMin\" onClick={() => history.push(`/${css.name}`)}>\r\n      <div\r\n        className=\"infoHeader\"\r\n        style={{ backgroundImage: `url(${css.cover})` }}\r\n      >\r\n        <div className=\"nameLogo\">\r\n          <div className={`image ${css.logo ? \"imageT\" : \"\"}`}>\r\n            {css.logo && <img src={css.logo} alt=\"\" />}\r\n          </div>\r\n          <h1>\r\n            {css.name} CSS{\" \"}\r\n            {css.site && (\r\n              <a href={css.site} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"ri-git-repository-line\"></i>\r\n              </a>\r\n            )}\r\n            {css.repo && (\r\n              <a href={css.repo} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"ri-link\"></i>\r\n              </a>\r\n            )}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MinInfo from \"./MinInfo\";\r\n\r\nexport const getList = async () => {\r\n  try {\r\n    const url =\r\n      \"https://raw.githubusercontent.com/MOF1/krunker_css_configs/main/configs.json\";\r\n    const response = await axios.get(url, {\r\n      params: {\r\n        t: new Date().getTime(),\r\n      },\r\n    });\r\n    if (response.status === 200) {\r\n      return response.data;\r\n    }\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    throw new Error(err.message);\r\n  }\r\n};\r\nexport default function CssList() {\r\n  const [state, setState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getList().then((data) => {\r\n      setState(data);\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      {state.map((item, id) => (\r\n        <MinInfo key={id} css={item.base} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Info.css\";\r\n\r\nexport default function Info({ css }) {\r\n  return (\r\n    <div className=\"Info\">\r\n      <div\r\n        className=\"infoHeader\"\r\n        style={{ backgroundImage: `url(${css.cover})` }}\r\n      >\r\n        <div className=\"nameLogo\">\r\n          <div className={`image ${css.logo ? \"imageT\" : \"\"}`}>\r\n            {css.logo && <img src={css.logo} alt=\"\" />}\r\n          </div>\r\n          <h1>\r\n            {css.name} CSS{\" \"}\r\n            {css.repo && (\r\n              <a href={css.repo} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"ri-git-repository-line\"></i>\r\n              </a>\r\n            )}\r\n            {css.site && (\r\n              <a href={css.site} target=\"_blank\" rel=\"noreferrer\">\r\n                <i className=\"ri-link\"></i>\r\n              </a>\r\n            )}\r\n          </h1>\r\n        </div>\r\n        <div className=\"description\">{css.description}</div>\r\n\r\n        {css.credits.length > 0 && (\r\n          <div className=\"creditSection\">\r\n            <h2>Credits</h2>\r\n            {css.credits.map((item, id) => (\r\n              <p key={id} className=\"creditItem\">\r\n                {item.name}{\" \"}\r\n                {item.contacts.map((contact, id2) => (\r\n                  <a\r\n                    key={id2}\r\n                    className=\"contactBtn\"\r\n                    target=\"_blank\"\r\n                    href={contact.link}\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    {contact.type}\r\n                  </a>\r\n                ))}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport \"./Work.css\";\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nconst getValue = (item) => {\r\n  if (item.type === \"select\") {\r\n    const option = item.options.find((i) => i.name === item.default);\r\n    if (!option) return \"\";\r\n    return `${item.var}: ${option.value};\r\n${option.raw_value ? option.raw_value : \"\"}`;\r\n  } else if (item.type === \"imageURL\") {\r\n    return item.default ? `${item.var}: url(\"${item.default}\");` : \"\";\r\n  }\r\n\r\n  return item.default ? `${item.var}: ${item.default};` : \"\";\r\n};\r\n\r\nconst getFirstState = (value) => {\r\n  return value.map((item) => {\r\n    return {\r\n      ...item,\r\n      value: item.default ? getValue(item) : \"\",\r\n      val: item.default ? item.default : \"\",\r\n      show: false,\r\n    };\r\n  });\r\n};\r\n\r\nexport const sleep = (ms) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\n// Credit,\r\n// https://github.com/casesandberg/react-color/issues/750#issuecomment-684882202\r\nexport const decimalToHex = (alpha) => {\r\n  let aHex = Math.round(255 * alpha).toString(16);\r\n  return alpha === 0 ? \"00\" : aHex.length < 2 ? `0${aHex}` : aHex;\r\n};\r\n\r\nexport default function Work({ value, main, name, match }) {\r\n  const [state, setState] = useState(() => getFirstState(value));\r\n  const [onProcess, setProcess] = useState(false);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [status, setStatus] = useState(true);\r\n  const [msg, setMsg] = useState(\"Processing\");\r\n\r\n  const setColor = (e, i) => {\r\n    const color = `${e.hex}${decimalToHex(e.rgb.a)}`;\r\n    const nState = state.map((item) => {\r\n      item.val = item.title === i.title ? color : item.val;\r\n      item.value =\r\n        item.title === i.title ? `${item.var}: ${item.val};` : item.value;\r\n      return item;\r\n    });\r\n    setState(nState);\r\n  };\r\n\r\n  const setValue = (e, i) => {\r\n    const nState = state.map((item) => {\r\n      item.val = item.title === i.title ? e.target.value.trim() : item.val;\r\n\r\n      if (item.type === \"imageURL\") {\r\n        item.value =\r\n          item.title === i.title\r\n            ? `${item.var}: url(\"${item.val}\");`\r\n            : item.value;\r\n      } else {\r\n        item.value =\r\n          item.title === i.title ? `${item.var}: ${item.val};` : item.value;\r\n      }\r\n      return item;\r\n    });\r\n    setState(nState);\r\n  };\r\n\r\n  const setOption = (e, i, o) => {\r\n    const selected = e.target.value;\r\n\r\n    const nState = state.map((item) => {\r\n      item.val = item.title === i.title ? selected : item.val;\r\n      item.value =\r\n        item.title === i.title\r\n          ? `${item.var}: ${o.value};\\n${o.raw_value ? o.raw_value : \"\"}`\r\n          : item.value;\r\n      return item;\r\n    });\r\n    setState(nState);\r\n  };\r\n\r\n  const genarateConfig = async () => {\r\n    setPercentage(0);\r\n    setStatus(true);\r\n    setProcess(true);\r\n    setMsg(\"\");\r\n    await sleep(200);\r\n\r\n    try {\r\n      setPercentage(4);\r\n      setMsg(\"Setting up configs\");\r\n      await sleep(1000);\r\n      let text = \"\";\r\n      state.map((item) => {\r\n        text += item.val ? `\\n${item.value}` : \"\";\r\n\r\n        if (item.type === \"imageURL\") {\r\n          if (!item.val && item.raw_value_on_empty) {\r\n            text += \"\\n\" + item.raw_value_on_empty;\r\n          }\r\n\r\n          if (item.val && item.raw_value_on_fill) {\r\n            text += \"\\n\" + item.raw_value_on_fill;\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n      setPercentage(7);\r\n\r\n      setMsg(\"Downloading resources\");\r\n      const response = await axios.get(main.target_url, {\r\n        responseType: \"arraybuffer\",\r\n      });\r\n      setPercentage(30);\r\n\r\n      if (main.target_type === \"zip\") {\r\n        setMsg(\"Processing Zip\");\r\n        const zip = new JSZip();\r\n        await zip.loadAsync(response.data);\r\n        setPercentage(52);\r\n\r\n        const prebuiltContent = await zip.file(main.target_file).async(\"text\");\r\n        const newContent = prebuiltContent + `\\n/*Overrides*/\\n:root{${text}}`;\r\n        setPercentage(79);\r\n\r\n        zip.file(main.target_file, newContent);\r\n        setPercentage(86);\r\n\r\n        const content = await zip.generateAsync({ type: \"blob\" });\r\n        setPercentage(95);\r\n\r\n        saveAs(content, `${name}_CSS.zip`);\r\n      }\r\n\r\n      if (main.target_type === \"css\") {\r\n        const textDecoder = new TextDecoder(\"utf-8\");\r\n        const textEncoder = new TextEncoder();\r\n\r\n        let css = textDecoder.decode(new Uint8Array(response.data));\r\n        setPercentage(57);\r\n        const newContent = css + `\\n/*Overrides*/\\n:root{${text}}`;\r\n        setPercentage(95);\r\n\r\n        saveAs(new Blob([textEncoder.encode(newContent)]), \"main_custom.css\");\r\n      }\r\n\r\n      setPercentage(100);\r\n      setStatus(true);\r\n      setMsg(\"Done. Thank you for using krunker css tool\");\r\n    } catch (err) {\r\n      setStatus(false);\r\n      setMsg(err.message);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setProcess(false);\r\n    }, 4000);\r\n  };\r\n\r\n  const expand = (title, value) => {\r\n    setState(\r\n      state.map((item) => {\r\n        item.show = item.title === title ? !item.show : item.show;\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Work\">\r\n        {!onProcess ? (\r\n          <>\r\n            {state.map((item, id) => (\r\n              <div className=\"config\" key={id}>\r\n                <div\r\n                  className={`configMinItem ${item.show && \"show\"}`}\r\n                  onClick={() => expand(item.title, !item.show)}\r\n                >\r\n                  <h3>{item.title}</h3>\r\n                  {item.description && (\r\n                    <p className=\"description\">{item.description}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {item.show && (\r\n                  <div className=\"configMaxItem\">\r\n                    <div className=\"inputContainer\">\r\n                      <h4>Change Value</h4>\r\n                      {item.type === \"color\" && (\r\n                        <ChromePicker\r\n                          color={item.val}\r\n                          onChangeComplete={(e) => setColor(e, item)}\r\n                        />\r\n                      )}\r\n\r\n                      <div>\r\n                        {item.type === \"select\" &&\r\n                          item.options.map((option, id) => (\r\n                            <div key={id} style={{ marginBottom: \"1rem\" }}>\r\n                              <input\r\n                                onChange={(e) => setOption(e, item, option)}\r\n                                checked={\r\n                                  item.val === option.name ? true : false\r\n                                }\r\n                                id={item.var + option.name}\r\n                                type=\"radio\"\r\n                                name={item.title}\r\n                                value={option.name}\r\n                              />\r\n                              <label htmlFor={item.var + option.name}>\r\n                                {option.name}\r\n                              </label>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n\r\n                      {item.type === \"imageURL\" && (\r\n                        <input\r\n                          onChange={(e) => setValue(e, item)}\r\n                          id={item.var}\r\n                          type=\"text\"\r\n                          value={item.val}\r\n                          placeholder=\"Image URL\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n\r\n                    {item.hint_image && (\r\n                      <div className=\"hint\">\r\n                        <img src={item.hint_image} alt={item.title}></img>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <div className=\"loadingBar\">\r\n              <div\r\n                className=\"loading\"\r\n                style={{ width: `${percentage}%` }}\r\n              ></div>\r\n            </div>\r\n            <p\r\n              className=\"loadingMsg\"\r\n              style={{ color: `${status ? \"green\" : \"red\"}` }}\r\n            >\r\n              {msg}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {!onProcess && (\r\n        <div className=\"downloadBar\">\r\n          <div className=\"wrapper\">\r\n            <button onClick={genarateConfig} className=\"download\">\r\n              <i className=\"ri-download-cloud-2-line\"></i> Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst gotoHome = () => {\r\n  const link = document.createElement(\"a\");\r\n  link.href = \"https://MOF1.github.io\";\r\n  link.click();\r\n};\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <i class=\"ri-emotion-sad-line\"></i>\r\n      <p className=\"nofTitle\">CSS NOT FOUND</p>\r\n      <p className=\"nofDesc\">\r\n        The page you are looking for is not exists. If there is any issue then\r\n        ask whoever sends you this link\r\n      </p>\r\n      <div className=\"nofAction\">\r\n        <button onClick={gotoHome}>\r\n          <i className=\"ri-arrow-go-back-line\"></i>Go Back Home\r\n        </button>\r\n\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          <button>\r\n            <i className=\"ri-list-check\"></i>CSS List\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Info from \"../Sections/Info\";\r\nimport Work from \"../Sections/Work\";\r\nimport { getList } from \"../Sections/CssList\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nexport default function Config() {\r\n  const [exists, setExists] = useState(null);\r\n  const { css_name } = useParams();\r\n  const [config, setConfig] = useState({});\r\n\r\n  useEffect(() => {\r\n    getList()\r\n      .then((data) => {\r\n        const ele = data.find((item) => item.base.name === css_name);\r\n        if (ele) {\r\n          setConfig(ele);\r\n          setExists(true);\r\n        } else {\r\n          setExists(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setExists(false);\r\n      });\r\n  }, [css_name]);\r\n\r\n  if (exists === null) return null;\r\n\r\n  return (\r\n    <>\r\n      {exists ? (\r\n        <>\r\n          <Info css={config.base} />\r\n          <Work\r\n            value={config.configs}\r\n            main={config.main}\r\n            name={config.base.name}\r\n          />\r\n        </>\r\n      ) : (\r\n        <NotFound />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","class scan {\r\n  static obj = (obj, name) => {\r\n    return !obj.hasOwnProperty(name) ||\r\n      typeof obj[name] !== \"object\" ||\r\n      Array.isArray(obj[name])\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  static obj_optional = (obj, name) => {\r\n    if (!obj.hasOwnProperty(name)) return true;\r\n    return typeof obj[name] !== \"object\" || Array.isArray(obj[name])\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  static aObj = (obj) => {\r\n    return typeof obj !== \"object\" || Array.isArray(obj) ? false : true;\r\n  };\r\n\r\n  static array = (arr, name) => {\r\n    return !arr.hasOwnProperty(name) || !Array.isArray(arr[name])\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  static array_optional = (arr, name) => {\r\n    if (!arr.hasOwnProperty(name)) return true;\r\n\r\n    return Array.isArray(arr[name]);\r\n  };\r\n\r\n  static str = (str, name) => {\r\n    return !str.hasOwnProperty(name) ||\r\n      typeof str[name] !== \"string\" ||\r\n      str[name] === \"\"\r\n      ? false\r\n      : true;\r\n  };\r\n\r\n  static str_optional = (str, name) => {\r\n    if (!str.hasOwnProperty(name)) return true;\r\n    return typeof str[name] === \"string\";\r\n  };\r\n\r\n  static exists = (data, name) => {\r\n    return data.hasOwnProperty(name);\r\n  };\r\n}\r\n\r\nconst scan_config_input = (config) => {\r\n  if (!scan.str(config, \"title\")) throw new Error(\"Config/Title not found\");\r\n  if (!scan.str(config, \"type\")) throw new Error(\"Config/type not found\");\r\n  if (!scan.str(config, \"var\")) throw new Error(\"Config/var not found\");\r\n  if (!scan.str_optional(config, \"default\"))\r\n    throw new Error(\"Config/default not found\");\r\n  if (!scan.str_optional(config, \"description\"))\r\n    throw new Error(\"Config/description not found\");\r\n  if (!scan.str_optional(config, \"hint_image\"))\r\n    throw new Error(\"Config/hint_image not found\");\r\n  if (!scan.str_optional(config, \"raw_value_on_empty\"))\r\n    throw new Error(\"Config/raw_value_on_empty not found\");\r\n  if (!scan.str_optional(config, \"raw_value_on_fill\"))\r\n    throw new Error(\"Config/raw_value_on_fill not found\");\r\n};\r\n\r\nconst scan_config_select = (config) => {\r\n  if (!scan.str(config, \"title\")) throw new Error(\"Config/Title not found\");\r\n  if (!scan.str(config, \"type\")) throw new Error(\"Config/type not found\");\r\n  if (!scan.str(config, \"var\")) throw new Error(\"Config/var not found\");\r\n  if (!scan.str(config, \"default\")) throw new Error(\"Config/default not found\");\r\n  if (!scan.str_optional(config, \"description\"))\r\n    throw new Error(\"Config/description not found\");\r\n  if (!scan.str_optional(config, \"hint_image\"))\r\n    throw new Error(\"Config/hint_image not found\");\r\n\r\n  if (!scan.array(config, \"options\"))\r\n    throw new Error(\"Select/Options not found\");\r\n\r\n  const options = config.options;\r\n  if (options.length < 2) throw new Error(\"Required more options\");\r\n\r\n  for (let i = 0; i < options.length; i++) {\r\n    if (!scan.aObj(options[i])) throw new Error(\"Invalid Option object\");\r\n\r\n    if (!scan.str(options[i], \"name\"))\r\n      throw new Error(\"Select/Options/Name not found\");\r\n\r\n    if (!scan.str(options[i], \"value\"))\r\n      throw new Error(\"Select/Options/value not found\");\r\n\r\n    if (!scan.str_optional(options[i], \"raw_value\"))\r\n      throw new Error(\"Select/Options/raw_value not found\");\r\n  }\r\n};\r\n\r\nconst scan_config_color = (config) => {\r\n  if (!scan.str(config, \"title\")) throw new Error(\"Config/Title not found\");\r\n  if (!scan.str(config, \"type\")) throw new Error(\"Config/type not found\");\r\n  if (!scan.str(config, \"var\")) throw new Error(\"Config/var not found\");\r\n  if (!scan.str(config, \"default\")) throw new Error(\"Config/default not found\");\r\n  if (!scan.str_optional(config, \"description\"))\r\n    throw new Error(\"Config/description not found\");\r\n  if (!scan.str_optional(config, \"hint_image\"))\r\n    throw new Error(\"Config/hint_image not found\");\r\n};\r\n\r\nexport const scan_config = (data) => {\r\n  let ret = {\r\n    err: \"\",\r\n    success: false,\r\n  };\r\n\r\n  try {\r\n    if (!scan.obj(data, \"base\")) throw new Error(\"Basic Configs not found.\");\r\n\r\n    const base = data.base;\r\n\r\n    if (!scan.str(base, \"name\")) {\r\n      throw new Error(\"Basic/Name not defined\");\r\n    }\r\n\r\n    if (!scan.str_optional(base, \"logo\")) {\r\n      throw new Error(\"Basic/Logo not defined\");\r\n    }\r\n\r\n    if (!scan.str_optional(base, \"cover\")) {\r\n      throw new Error(\"Basic/Cover Photo not defined\");\r\n    }\r\n\r\n    if (!scan.str_optional(base, \"description\")) {\r\n      throw new Error(\"Basic/Description not defined\");\r\n    }\r\n\r\n    if (!scan.str_optional(base, \"repo\")) {\r\n      throw new Error(\"Basic/Repo Link not defined\");\r\n    }\r\n\r\n    if (!scan.str_optional(base, \"site\")) {\r\n      throw new Error(\"Basic/Website not defined\");\r\n    }\r\n\r\n    if (!scan.array_optional(base, \"credits\")) {\r\n      throw new Error(\"Basic/Name not defined\");\r\n    }\r\n\r\n    const credits = base.credits;\r\n\r\n    for (let i = 0; i < credits.length; i++) {\r\n      if (!scan.aObj(credits[i])) throw new Error(\"Invalid Credits object\");\r\n\r\n      if (!scan.str(credits[i], \"name\"))\r\n        throw new Error(\"Base/Credits/Name not defined\");\r\n\r\n      if (!scan.array_optional(credits[i], \"contacts\"))\r\n        throw new Error(\"Base/Credits/Contacts invalid\");\r\n\r\n      if (scan.exists(credits[i], \"contacts\")) {\r\n        const contacts = credits[i].contacts;\r\n\r\n        for (let j = 0; j < contacts.length; j++) {\r\n          if (!scan.aObj(contacts[j]))\r\n            throw new Error(\"Invalid Base/Credits/Contacts object\");\r\n\r\n          if (!scan.str(contacts[j], \"type\"))\r\n            throw new Error(\"Credit/Contacts/Type not found\");\r\n\r\n          if (!scan.str(contacts[j], \"link\"))\r\n            throw new Error(\"Credit/Contacts/Link not found\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!scan.obj(data, \"main\")) throw new Error(\"Target configs not found\");\r\n    const main = data.main;\r\n\r\n    if (!scan.str(main, \"target_type\"))\r\n      throw new Error(\"Target/Type not defined\");\r\n\r\n    if (!scan.str(main, \"target_url\"))\r\n      throw new Error(\"Target/Url not defined\");\r\n\r\n    if (main.target_type === \"zip\" && !scan.str(main, \"target_file\")) {\r\n      throw new Error(\"Target/File not found\");\r\n    }\r\n\r\n    if (!scan.array(data, \"configs\")) throw new Error(\"Configs not found\");\r\n    const configs = data.configs;\r\n\r\n    if (configs.length < 1) throw new Error(\"No configs found\");\r\n\r\n    for (let i = 0; i < configs.length; i++) {\r\n      if (!scan.aObj(configs[i])) throw new Error(\"Invalid Config object\");\r\n\r\n      switch (configs[i].type) {\r\n        case \"imageURL\":\r\n          scan_config_input(configs[i]);\r\n          break;\r\n        case \"select\":\r\n          scan_config_select(configs[i]);\r\n          break;\r\n        case \"color\":\r\n          scan_config_color(configs[i]);\r\n          break;\r\n        default:\r\n          throw new Error(\"Invalid Type\");\r\n      }\r\n    }\r\n\r\n    ret.success = true;\r\n    return ret;\r\n  } catch (err) {\r\n    ret.err = err.message;\r\n    return ret;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { sleep } from \"../Sections/Work\";\r\nimport { scan_config } from \"../Utils/utils\";\r\nimport \"./Loader.css\";\r\n\r\nexport default function Loader({ setShow, setData }) {\r\n  const [onLoad, setLoad] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [err, setErr] = useState(false);\r\n  const [msg, setMsg] = useState(\"\");\r\n\r\n  const [url, setUrl] = useState(\"\");\r\n  const localAvail = localStorage.getItem(\"css_config\") ? true : false;\r\n\r\n  const loadFile = async (e) => {\r\n    const files = e.target.files;\r\n    if (files.length < 1) return;\r\n    const file = files[0];\r\n\r\n    // Reseting file input\r\n    document.getElementById(\"loadFileInput\").value = null;\r\n\r\n    // Starts the process\r\n    await start();\r\n\r\n    let reader = new FileReader();\r\n    reader.readAsText(file, \"UTF-8\");\r\n    set_progress(20);\r\n\r\n    reader.onload = async (e) => {\r\n      const data = e.target.result;\r\n      set_progress(60);\r\n      const csstData = await JSON.parse(data);\r\n      const ret = scan_config(csstData);\r\n      if (!ret.success) {\r\n        await stop(`Config error. Reason :: ${ret.err}`);\r\n        await closePanel();\r\n      } else {\r\n        await stop();\r\n        await closePanel();\r\n        setData(csstData);\r\n      }\r\n    };\r\n\r\n    reader.onerror = async (err) => {\r\n      await stop(err.message);\r\n      await closePanel();\r\n    };\r\n  };\r\n\r\n  const loadUrl = async () => {\r\n    try {\r\n      await start();\r\n      await set_progress(30);\r\n      const response = await axios.get(url);\r\n      const ret = scan_config(response.data);\r\n      await set_progress(90);\r\n      if (!ret.success) {\r\n        await stop(`Config error. Reason :: ${ret.err}`);\r\n        await closePanel();\r\n      } else {\r\n        await stop();\r\n        await closePanel();\r\n        setData(response.data);\r\n      }\r\n    } catch (err) {\r\n      await stop(err.message);\r\n      await closePanel();\r\n    }\r\n  };\r\n\r\n  const loadLocal = async () => {\r\n    await start();\r\n    const lC = localStorage.getItem(\"css_config\");\r\n    const data = JSON.parse(lC);\r\n\r\n    await set_progress(40);\r\n\r\n    const ret = scan_config(data);\r\n    if (ret.success) {\r\n      await closePanel();\r\n      setData(data);\r\n    } else {\r\n      await stop(\"Saved local data corrupted.\");\r\n      localStorage.setItem(\"css_config\", null);\r\n      await closePanel();\r\n    }\r\n  };\r\n\r\n  const start = async () => {\r\n    setErr(false);\r\n    setLoad(true);\r\n    setProgress(0);\r\n    await sleep(1000);\r\n  };\r\n\r\n  const set_progress = async (progress) => {\r\n    setProgress(progress);\r\n    await sleep(1000);\r\n  };\r\n\r\n  const stop = async (err = \"\") => {\r\n    if (err) {\r\n      setErr(true);\r\n      setMsg(err);\r\n      await sleep(4000);\r\n    } else {\r\n      setProgress(100);\r\n      await sleep(800);\r\n    }\r\n  };\r\n\r\n  const closePanel = async () => {\r\n    await sleep(1000);\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`loadBar ${err && \"err\"}`}>\r\n      {!onLoad && !err && (\r\n        <>\r\n          <i\r\n            onClick={() => {\r\n              setShow();\r\n            }}\r\n            className=\"ri-close-fill closeBtn\"\r\n          ></i>\r\n          <div className=\"loadItem\">\r\n            <p>Load from url</p>\r\n            <div className=\"loadContn\">\r\n              <input\r\n                onChange={(e) => setUrl(e.target.value)}\r\n                value={url}\r\n                type=\"text\"\r\n                placeholder=\"Paste your url here\"\r\n              ></input>\r\n              <button onClick={loadUrl}>\r\n                <i className=\"ri-refresh-fill\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"loadItem\">\r\n            <p>Others</p>\r\n            <div className=\"loadContn\">\r\n              <input\r\n                id=\"loadFileInput\"\r\n                style={{ display: \"none\" }}\r\n                type=\"file\"\r\n                accept=\".json\"\r\n                onChange={(e) => loadFile(e)}\r\n              />\r\n              <label htmlFor=\"loadFileInput\" className=\"bigButton\">\r\n                <i className=\"ri-file-3-line\"></i>\r\n                Load from file\r\n              </label>\r\n              <div\r\n                onClick={loadLocal}\r\n                className={`bigButton ${!localAvail ? \"disabled\" : \"\"}`}\r\n              >\r\n                <i className=\"ri-window-2-line\"></i>\r\n                Load from browser\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {onLoad && !err && (\r\n        <div className=\"loadItem\">\r\n          <p>Loading please wait</p>\r\n          <div className=\"progressBar\">\r\n            <div style={{ width: `${progress}%` }}> </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {err && (\r\n        <div className=\"loadItem err\">\r\n          <i className=\"ri-error-warning-fill\"></i>\r\n          <div>\r\n            <p>Failed</p>\r\n            <p className=\"errMsg\">{msg}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function AddOption({\r\n  setShow,\r\n  options,\r\n  setOptions,\r\n  setDefaultOption,\r\n}) {\r\n  const [optionName, setOptionName] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [rawValue, setRawValue] = useState(\"\");\r\n\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n\r\n  const setOptionState = (e) => {\r\n    setOptionName(e.target.value);\r\n    const exists = options.find(\r\n      (item) =>\r\n        item.name.toLowerCase().trim() === e.target.value.toLowerCase().trim()\r\n    );\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same option already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n  const addOption = () => {\r\n    if (options.length < 1) {\r\n      setDefaultOption(optionName.trim());\r\n    }\r\n    setOptions([\r\n      ...options,\r\n      {\r\n        name: optionName.trim(),\r\n        value: value.trim(),\r\n        raw_value: rawValue.trim(),\r\n      },\r\n    ]);\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setOptionName(\"\");\r\n    setValue(\"\");\r\n    setRawValue(\"\");\r\n    setErr(false);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Add option</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <div className=\"scroller\">\r\n            <p className=\"head\">Option Name</p>\r\n            <input\r\n              value={optionName}\r\n              onChange={(e) => {\r\n                setOptionState(e);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. On, Off, etc\"\r\n            />\r\n            <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n              <i className=\"ri-error-warning-line\"></i>\r\n              {errMsg}\r\n            </p>\r\n\r\n            <p className=\"head\">Option Value</p>\r\n            <input\r\n              value={value}\r\n              onChange={(e) => {\r\n                setValue(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. 1px, 1rem, 20%, calc(xx x xx), etc\"\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p className=\"head\">Raw Value (Optional)</p>\r\n            <input\r\n              value={rawValue}\r\n              onChange={(e) => {\r\n                setRawValue(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"ex. --acc-h: #fff; --acc-sub: #f4f;\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && optionName.trim() !== \"\" && value.trim() !== \"\" && (\r\n              <button onClick={addOption}>\r\n                <i className=\"ri-add-box-fill\"></i>Add\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function EditOption({\r\n  setShow,\r\n  options,\r\n  setOptions,\r\n  defaultOption,\r\n  setDefaultOption,\r\n  focusOption,\r\n  focusIndex,\r\n}) {\r\n  const [optionName, setOptionName] = useState(() => focusOption.name);\r\n  const [value, setValue] = useState(() => focusOption.value);\r\n  const [rawValue, setRawValue] = useState(() => focusOption.raw_value);\r\n\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n\r\n  const setOptionState = (e) => {\r\n    setOptionName(e.target.value);\r\n    const exists = options.find((item, index) => {\r\n      if (focusIndex !== index) {\r\n        return (\r\n          item.name.toLowerCase().trim() === e.target.value.toLowerCase().trim()\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same option already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n  const editOption = () => {\r\n    if (focusOption.name === defaultOption) {\r\n      setDefaultOption(optionName.trim());\r\n    }\r\n\r\n    const nOptions = options.map((item, index) => {\r\n      if (index === focusIndex) {\r\n        item.name = optionName.trim();\r\n        item.value = value.trim();\r\n        item.raw_value = rawValue.trim();\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setOptions(nOptions);\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setOptionName(focusOption.name);\r\n    setValue(focusOption.value);\r\n    setRawValue(focusOption.raw_value);\r\n    setErr(false);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Edit option</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <div className=\"scroller\">\r\n            <p className=\"head\">Option Name</p>\r\n            <input\r\n              value={optionName}\r\n              onChange={(e) => {\r\n                setOptionState(e);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. On, Off, etc\"\r\n            />\r\n            <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n              <i className=\"ri-error-warning-line\"></i>\r\n              {errMsg}\r\n            </p>\r\n\r\n            <p className=\"head\">Option Value</p>\r\n            <input\r\n              value={value}\r\n              onChange={(e) => {\r\n                setValue(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. 1px, 1rem, 20%, calc(xx x xx), etc\"\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p className=\"head\">Raw Value (Optional)</p>\r\n            <input\r\n              value={rawValue}\r\n              onChange={(e) => {\r\n                setRawValue(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"ex. --acc-h: #fff; --acc-sub: #f4f;\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && optionName.trim() !== \"\" && value.trim() !== \"\" && (\r\n              <button onClick={editOption}>\r\n                <i className=\"ri-save-2-line\"></i>Save\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { decimalToHex } from \"../Sections/Work\";\r\nimport AddOption from \"./AddOption\";\r\nimport EditOption from \"./EditOption\";\r\n\r\nconst getTypes = () => [\r\n  {\r\n    type: \"imageURL\",\r\n    value: true,\r\n  },\r\n  {\r\n    type: \"select\",\r\n    value: false,\r\n  },\r\n  {\r\n    type: \"color\",\r\n    value: false,\r\n  },\r\n];\r\n\r\nexport default function AddConfig({ setShow, configs, setConfigs }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [cvar, setCvar] = useState(\"\");\r\n  const [hint_image, setHint_image] = useState(\"\");\r\n  const [defaultVar, setDefaultVar] = useState(\"\");\r\n\r\n  // ImageURL Specific\r\n  const [raw_on_empty, setRaw_on_empty] = useState(\"\");\r\n  const [raw_on_fill, setRaw_on_fill] = useState(\"\");\r\n\r\n  // Select\r\n  const [options, setOptions] = useState([]);\r\n  const [focusOption, setFocusOption] = useState({});\r\n  const [focusIndex, setFocusIndex] = useState(0);\r\n  const [defaultOption, setDefaultOption] = useState(\"\");\r\n  const [showAddOption, setAddOption] = useState(false);\r\n  const [showEditOption, setEditOption] = useState(false);\r\n\r\n  // Color\r\n  const [defaultColor, setDefaultColor] = useState(\"#FFFFFFFF\");\r\n\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n\r\n  const [types, setTypes] = useState(() => getTypes());\r\n\r\n  const setNameState = (e) => {\r\n    setName(e.target.value);\r\n    const exists = configs.find((item) => item.title === e.target.value.trim());\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same config already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n\r\n  const changeType = (e) => {\r\n    setTypes(\r\n      types.map((item) => {\r\n        item.value = item.type === e.target.value ? true : false;\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const changeOption = (e) => {\r\n    setDefaultOption(e.target.value);\r\n  };\r\n\r\n  const deleteOption = (curr) => {\r\n    let reqIndex = 0;\r\n\r\n    const gOptions = options.map((item) => item);\r\n    gOptions.forEach((item, index) => {\r\n      if (item.name === curr) {\r\n        reqIndex = index;\r\n      }\r\n    });\r\n    gOptions.splice(reqIndex, 1);\r\n\r\n    // Handles Default option\r\n    if (defaultOption === curr && gOptions.length > 0) {\r\n      setDefaultOption(gOptions[0].name);\r\n    }\r\n\r\n    setOptions(gOptions);\r\n  };\r\n\r\n  const setColor = (e) => {\r\n    const color = `${e.hex}${decimalToHex(e.rgb.a)}`;\r\n    setDefaultColor(color);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setCvar(\"\");\r\n    setHint_image(\"\");\r\n    setDefaultVar(\"\");\r\n    setRaw_on_empty(\"\");\r\n    setRaw_on_fill(\"\");\r\n    setOptions([]);\r\n    setFocusOption({});\r\n    setFocusIndex(0);\r\n    setDefaultOption(\"\");\r\n    setAddOption(false);\r\n    setEditOption(false);\r\n    setDefaultColor(\"#FFFFFFFF\");\r\n    setErr(false);\r\n    setMsg(\"\");\r\n  };\r\n\r\n  const getCurrType = () => types.find((item) => item.value).type;\r\n\r\n  const configOK = () => {\r\n    const type = getCurrType();\r\n\r\n    if (cvar === \"\") {\r\n      return false;\r\n    }\r\n\r\n    if (type === \"select\") {\r\n      const dOption = options.find((option) => option.name === defaultOption);\r\n\r\n      if (!(dOption && options.length > 1)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const addConfig = () => {\r\n    const type = getCurrType();\r\n\r\n    if (type === \"select\") {\r\n      setConfigs([\r\n        ...configs,\r\n        {\r\n          title: name,\r\n          description,\r\n          type: \"select\",\r\n          var: cvar,\r\n          default: defaultOption,\r\n          hint_image,\r\n          options,\r\n        },\r\n      ]);\r\n    } else if (type === \"imageURL\") {\r\n      setConfigs([\r\n        ...configs,\r\n        {\r\n          title: name,\r\n          description,\r\n          type: \"imageURL\",\r\n          var: cvar,\r\n          default: defaultVar,\r\n          hint_image,\r\n          raw_value_on_empty: raw_on_empty,\r\n          raw_value_on_fill: raw_on_fill,\r\n        },\r\n      ]);\r\n    } else if (type === \"color\") {\r\n      setConfigs([\r\n        ...configs,\r\n        {\r\n          title: name,\r\n          description,\r\n          type: \"color\",\r\n          var: cvar,\r\n          default: defaultColor,\r\n          hint_image,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Add config</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <p className=\"head\">Config Type</p>\r\n          <div className=\"radioContainer\">\r\n            {types.map((item, id) => (\r\n              <div key={id}>\r\n                <input\r\n                  id={`type${id}`}\r\n                  type=\"radio\"\r\n                  name=\"configType\"\r\n                  value={item.type}\r\n                  checked={item.value === true}\r\n                  onChange={(e) => changeType(e)}\r\n                />\r\n                <label htmlFor={`type${id}`}>{item.type}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"scroller\">\r\n            <p className=\"head\">Config Name</p>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => {\r\n                setNameState(e);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. Accent Color\"\r\n            />\r\n            <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n              <i className=\"ri-error-warning-line\"></i>\r\n              {errMsg}\r\n            </p>\r\n\r\n            <p className=\"head\">Description (Optional)</p>\r\n            <textarea\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              value={description}\r\n              placeholder=\"A good description about the config\"\r\n            ></textarea>\r\n\r\n            <p className=\"head\">Hint image</p>\r\n            <input\r\n              value={hint_image}\r\n              onChange={(e) => setHint_image(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Image url\"\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p className=\"head\">Css Variable Name</p>\r\n            <input\r\n              value={cvar}\r\n              onChange={(e) => {\r\n                setCvar(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. --accent-color\"\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            {types.find((item) => item.type === \"imageURL\" && item.value) !==\r\n              undefined && (\r\n              <>\r\n                <p className=\"head\">Default value (optional)</p>\r\n                <input\r\n                  value={defaultVar}\r\n                  onChange={(e) => setDefaultVar(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Url\"\r\n                ></input>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <p className=\"head\">Raw value on empty (optional)</p>\r\n                <input\r\n                  value={raw_on_empty}\r\n                  onChange={(e) => setRaw_on_empty(e.target.value.trim())}\r\n                  type=\"text\"\r\n                  placeholder=\"ex. --acc-h: #fff; --acc-sub: #f4f;\"\r\n                ></input>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <p className=\"head\">Raw value on fill (optional)</p>\r\n                <input\r\n                  value={raw_on_fill}\r\n                  onChange={(e) => setRaw_on_fill(e.target.value.trim())}\r\n                  type=\"text\"\r\n                  placeholder=\"ex. --acc-h: #fff; --acc-sub: #f4f;\"\r\n                ></input>\r\n              </>\r\n            )}\r\n\r\n            {types.find((item) => item.type === \"select\" && item.value) !==\r\n              undefined && (\r\n              <>\r\n                {options.length > 0 && (\r\n                  <>\r\n                    <p className=\"head\">Default option</p>\r\n                    <div className=\"radioContainer\">\r\n                      {options.map((item, id) => (\r\n                        <div key={id}>\r\n                          <input\r\n                            id={`option${id}`}\r\n                            type=\"radio\"\r\n                            name=\"configOption\"\r\n                            value={item.name}\r\n                            checked={item.name === defaultOption}\r\n                            onChange={(e) => changeOption(e)}\r\n                          />\r\n                          <label htmlFor={`option${id}`}>{item.name}</label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <p className=\"head\">Options</p>\r\n                    <div className=\"optionList\">\r\n                      {options.map((option, id) => (\r\n                        <div className=\"optionItem\" key={id}>\r\n                          <div className=\"optionItemTitle\">{option.name}</div>\r\n\r\n                          <div className=\"optionItemActions\">\r\n                            <i\r\n                              onClick={() => {\r\n                                setFocusIndex(id);\r\n                                setFocusOption(option);\r\n                                setEditOption(true);\r\n                              }}\r\n                              className=\"ri-pencil-fill\"\r\n                            ></i>\r\n                            <i\r\n                              onClick={() => deleteOption(option.name)}\r\n                              className=\"ri-delete-bin-line\"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                <button onClick={() => setAddOption(true)}>\r\n                  <i className=\"ri-menu-add-line\"></i>Add{\" \"}\r\n                  {options.length > 2 ? \"More\" : \"Option\"}\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            {types.find((item) => item.type === \"color\" && item.value) !==\r\n              undefined && (\r\n              <>\r\n                <p className=\"head\">Default color</p>\r\n                <ChromePicker\r\n                  color={defaultColor}\r\n                  onChangeComplete={(e) => setColor(e)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && name !== \"\" && configOK() && (\r\n              <button onClick={addConfig}>\r\n                <i className=\"ri-add-box-fill\"></i>Add Config\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showAddOption && (\r\n        <AddOption\r\n          setShow={setAddOption}\r\n          options={options}\r\n          setOptions={setOptions}\r\n          setDefaultOption={setDefaultOption}\r\n        />\r\n      )}\r\n      {showEditOption && (\r\n        <EditOption\r\n          setShow={setEditOption}\r\n          options={options}\r\n          setOptions={setOptions}\r\n          defaultOption={defaultOption}\r\n          setDefaultOption={setDefaultOption}\r\n          focusOption={focusOption}\r\n          focusIndex={focusIndex}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function AddLink({ setShow, links, setLinks }) {\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const setNameState = (e) => {\r\n    setName(e.target.value.trim());\r\n    const exists = links.find((item) => item.type === e.target.value.trim());\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same reference already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n\r\n  const addRefLink = () => {\r\n    setLinks([...links, { type: name, link: link }]);\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setErr(false);\r\n    setMsg(\"\");\r\n    setName(\"\");\r\n    setLink(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Add Reference / Link</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <p className=\"head\">Type of reference</p>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => {\r\n              setNameState(e);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Ex. Github, Discord, Youtube\"\r\n          />\r\n          <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n            <i className=\"ri-error-warning-line\"></i>\r\n            {errMsg}\r\n          </p>\r\n\r\n          <p className=\"head\">Link (URL)</p>\r\n          <input\r\n            value={link}\r\n            onChange={(e) => {\r\n              setLink(e.target.value.trim());\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Ex. https://google.co.in\"\r\n          />\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && name !== \"\" && link !== \"\" && (\r\n              <button onClick={addRefLink}>\r\n                <i className=\"ri-add-box-fill\"></i>Add Reference\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function EditLink({\r\n  setShow,\r\n  links,\r\n  setLinks,\r\n  focusLink,\r\n  focusIndex,\r\n}) {\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n  const [name, setName] = useState(() => focusLink.type);\r\n  const [link, setLink] = useState(() => focusLink.link);\r\n\r\n  const setNameState = (e) => {\r\n    setName(e.target.value.trim());\r\n    const exists = links.find((item, index) => {\r\n      if (focusIndex !== index) {\r\n        return (\r\n          item.type.toLowerCase().trim() === e.target.value.toLowerCase().trim()\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same reference already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n\r\n  const editRefLink = () => {\r\n    const nLinks = links.map((item, index) => {\r\n      if (index === focusIndex) {\r\n        item.type = name;\r\n        item.link = link;\r\n      }\r\n      return item;\r\n    });\r\n    setLinks(nLinks);\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setErr(false);\r\n    setMsg(\"\");\r\n    setName(focusLink.type);\r\n    setLink(focusLink.link);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Edit Reference / Link</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <p className=\"head\">Type of reference</p>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => {\r\n              setNameState(e);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Ex. Github, Discord, Youtube\"\r\n          />\r\n          <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n            <i className=\"ri-error-warning-line\"></i>\r\n            {errMsg}\r\n          </p>\r\n\r\n          <p className=\"head\">Link (URL)</p>\r\n          <input\r\n            value={link}\r\n            onChange={(e) => {\r\n              setLink(e.target.value.trim());\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Ex. https://google.co.in\"\r\n          />\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && name !== \"\" && link !== \"\" && (\r\n              <button onClick={editRefLink}>\r\n                <i className=\"ri-save-2-line\"></i>Save\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./AddCredit.css\";\r\nimport AddLink from \"./AddLink\";\r\nimport EditLink from \"./EditLink\";\r\n\r\nexport default function AddCredit({ setShow, credits, setCredits }) {\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [links, setLinks] = useState([]);\r\n  const [focusIndex, setFocusIndex] = useState(0);\r\n  const [focusLink, setFocusLink] = useState({});\r\n  const [showAddLink, setAddLink] = useState(false);\r\n  const [showEditLink, setEditLink] = useState(false);\r\n\r\n  const setNameState = (e) => {\r\n    setName(e.target.value.trim());\r\n    const exists = credits.find((item) => item.name === e.target.value.trim());\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same credit already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n\r\n  const addCredit = () => {\r\n    setCredits([...credits, { name, contacts: links }]);\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  const removeReference = (index) => {\r\n    const nLinks = links.map((item) => item);\r\n    nLinks.splice(index, 1);\r\n    setLinks(nLinks);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setErr(false);\r\n    setMsg(\"\");\r\n    setName(\"\");\r\n    setLinks([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Add Credit</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <p className=\"head\">Name of credit</p>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => {\r\n              setNameState(e);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Write here\"\r\n          />\r\n\r\n          <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n            <i className=\"ri-error-warning-line\"></i>\r\n            {errMsg}\r\n          </p>\r\n\r\n          <p className=\"head\">References / Links</p>\r\n\r\n          <div className=\"linkLists\">\r\n            {links.map((link, index) => (\r\n              <div className=\"linkItem\" key={index}>\r\n                <div className=\"linkName\">{link.type}</div>\r\n                <div className=\"linkItemActions\">\r\n                  <i\r\n                    onClick={() => {\r\n                      setFocusIndex(index);\r\n                      setFocusLink(link);\r\n                      setEditLink(true);\r\n                    }}\r\n                    className=\"ri-pencil-fill\"\r\n                  ></i>\r\n                  <i\r\n                    onClick={() => removeReference(index)}\r\n                    className=\"ri-delete-bin-line\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={() => setAddLink(true)}>\r\n            Add {links.length < 1 ? \"Reference / Link\" : \"More\"}\r\n          </button>\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && name !== \"\" && (\r\n              <button onClick={addCredit}>\r\n                <i className=\"ri-add-box-fill\"></i>Add Credit\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showAddLink && (\r\n        <AddLink setShow={setAddLink} links={links} setLinks={setLinks} />\r\n      )}\r\n\r\n      {showEditLink && (\r\n        <EditLink\r\n          setShow={setEditLink}\r\n          links={links}\r\n          setLinks={setLinks}\r\n          focusIndex={focusIndex}\r\n          focusLink={focusLink}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { decimalToHex } from \"../Sections/Work\";\r\nimport AddOption from \"./AddOption\";\r\nimport EditOption from \"./EditOption\";\r\n\r\nconst getTypes = (type) => {\r\n  const types = [\r\n    {\r\n      type: \"imageURL\",\r\n      value: false,\r\n    },\r\n    {\r\n      type: \"select\",\r\n      value: false,\r\n    },\r\n    {\r\n      type: \"color\",\r\n      value: false,\r\n    },\r\n  ];\r\n\r\n  return types.map((item) => {\r\n    item.value = item.type === type;\r\n    return item;\r\n  });\r\n};\r\n\r\nconst getInitial = (data, r = \"\") => {\r\n  if (Array.isArray(r)) {\r\n    return data ? JSON.parse(JSON.stringify(data)) : r;\r\n  }\r\n  return data ? data : r;\r\n};\r\n\r\nexport default function EditConfig({\r\n  setShow,\r\n  configs,\r\n  setConfigs,\r\n  focusConfigIndex,\r\n  focusConfig,\r\n}) {\r\n  const [name, setName] = useState(() => focusConfig.title);\r\n  const [description, setDescription] = useState(() => focusConfig.description);\r\n  const [cvar, setCvar] = useState(() => focusConfig.var);\r\n  const [hint_image, setHint_image] = useState(() => focusConfig.hint_image);\r\n  const [defaultVar, setDefaultVar] = useState(() => focusConfig.default);\r\n\r\n  // ImageURL Specific\r\n  const [raw_on_empty, setRaw_on_empty] = useState(() =>\r\n    getInitial(focusConfig.raw_value_on_empty)\r\n  );\r\n  const [raw_on_fill, setRaw_on_fill] = useState(() =>\r\n    getInitial(focusConfig.raw_value_on_fill)\r\n  );\r\n\r\n  // Select\r\n  const [options, setOptions] = useState(() =>\r\n    getInitial(focusConfig.options, [])\r\n  );\r\n  const [focusOption, setFocusOption] = useState({});\r\n  const [focusIndex, setFocusIndex] = useState(0);\r\n  const [defaultOption, setDefaultOption] = useState(() => focusConfig.default);\r\n  const [showAddOption, setAddOption] = useState(false);\r\n  const [showEditOption, setEditOption] = useState(false);\r\n\r\n  // Color\r\n  const [defaultColor, setDefaultColor] = useState(() => focusConfig.default);\r\n\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n\r\n  const [types, setTypes] = useState(() => getTypes(focusConfig.type));\r\n\r\n  const setNameState = (e) => {\r\n    setName(e.target.value);\r\n    const exists = configs.find((item) => item.title === e.target.value.trim());\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same config already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n\r\n  const changeType = (e) => {\r\n    setTypes(\r\n      types.map((item) => {\r\n        item.value = item.type === e.target.value ? true : false;\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const changeOption = (e) => {\r\n    setDefaultOption(e.target.value);\r\n  };\r\n\r\n  const deleteOption = (curr) => {\r\n    let reqIndex = 0;\r\n\r\n    const gOptions = options.map((item) => item);\r\n    gOptions.forEach((item, index) => {\r\n      if (item.name === curr) {\r\n        reqIndex = index;\r\n      }\r\n    });\r\n    gOptions.splice(reqIndex, 1);\r\n\r\n    // Handles Default option\r\n    if (defaultOption === curr && gOptions.length > 0) {\r\n      setDefaultOption(gOptions[0].name);\r\n    }\r\n\r\n    setOptions(gOptions);\r\n  };\r\n\r\n  const setColor = (e) => {\r\n    const color = `${e.hex}${decimalToHex(e.rgb.a)}`;\r\n    setDefaultColor(color);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setFocusOption({});\r\n    setFocusIndex(0);\r\n    setAddOption(false);\r\n    setEditOption(false);\r\n    setDefaultColor(focusConfig.default);\r\n    setErr(false);\r\n    setMsg(\"\");\r\n    setName(focusConfig.title);\r\n    setDescription(focusConfig.description);\r\n    setHint_image(focusConfig.hint_image);\r\n    setDefaultVar(focusConfig.default);\r\n    setRaw_on_empty(getInitial(focusConfig.raw_value_on_empty));\r\n    setRaw_on_fill(getInitial(focusConfig.raw_value_on_fill));\r\n    setOptions(getInitial(focusConfig.options, []));\r\n    setDefaultOption(focusConfig.default);\r\n    setTypes(getTypes(focusConfig.type));\r\n    setCvar(focusConfig.var);\r\n  };\r\n\r\n  const getCurrType = () => types.find((item) => item.value).type;\r\n\r\n  const configOK = () => {\r\n    const type = getCurrType();\r\n\r\n    if (cvar === \"\") {\r\n      return false;\r\n    }\r\n\r\n    if (type === \"select\") {\r\n      const dOption = options.find((option) => option.name === defaultOption);\r\n\r\n      if (!(dOption && options.length > 1)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const addConfig = () => {\r\n    const type = getCurrType();\r\n\r\n    const nConfig = configs.map((item, index) => {\r\n      if (index !== focusConfigIndex) return item;\r\n\r\n      item.title = name;\r\n      item.description = description;\r\n      item.var = cvar;\r\n      item.hint_image = hint_image;\r\n\r\n      if (type === \"select\") {\r\n        item.type = \"select\";\r\n        item.default = defaultOption;\r\n        item.options = options;\r\n      } else if (type === \"imageURL\") {\r\n        item.type = \"imageURL\";\r\n        item.default = defaultVar;\r\n        item.raw_value_on_empty = raw_on_empty;\r\n        item.raw_value_on_fill = raw_on_fill;\r\n      } else if (type === \"color\") {\r\n        item.type = \"color\";\r\n        item.default = defaultColor;\r\n      }\r\n\r\n      return item;\r\n    });\r\n\r\n    setConfigs(nConfig);\r\n\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Edit config</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <p className=\"head\">Config Type</p>\r\n          <div className=\"radioContainer\">\r\n            {types.map((item, id) => (\r\n              <div key={id}>\r\n                <input\r\n                  id={`type${id}`}\r\n                  type=\"radio\"\r\n                  name=\"configType\"\r\n                  value={item.type}\r\n                  checked={item.value === true}\r\n                  onChange={(e) => changeType(e)}\r\n                />\r\n                <label htmlFor={`type${id}`}>{item.type}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"scroller\">\r\n            <p className=\"head\">Config Name</p>\r\n            <input\r\n              value={name}\r\n              onChange={(e) => {\r\n                setNameState(e);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. Accent Color\"\r\n            />\r\n            <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n              <i className=\"ri-error-warning-line\"></i>\r\n              {errMsg}\r\n            </p>\r\n\r\n            <p className=\"head\">Description (Optional)</p>\r\n            <textarea\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              value={description}\r\n              placeholder=\"A good description about the config\"\r\n            ></textarea>\r\n\r\n            <p className=\"head\">Hint image</p>\r\n            <input\r\n              value={hint_image}\r\n              onChange={(e) => setHint_image(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Image url\"\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <p className=\"head\">Css Variable Name</p>\r\n            <input\r\n              value={cvar}\r\n              onChange={(e) => {\r\n                setCvar(e.target.value);\r\n              }}\r\n              type=\"text\"\r\n              placeholder=\"Ex. --accent-color\"\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            {types.find((item) => item.type === \"imageURL\" && item.value) !==\r\n              undefined && (\r\n              <>\r\n                <p className=\"head\">Default value (optional)</p>\r\n                <input\r\n                  value={defaultVar}\r\n                  onChange={(e) => setDefaultVar(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Url\"\r\n                ></input>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <p className=\"head\">Raw value on empty (optional)</p>\r\n                <input\r\n                  value={raw_on_empty}\r\n                  onChange={(e) => setRaw_on_empty(e.target.value.trim())}\r\n                  type=\"text\"\r\n                  placeholder=\"ex. --acc-h: #fff; --acc-sub: #f4f;\"\r\n                ></input>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <p className=\"head\">Raw value on fill (optional)</p>\r\n                <input\r\n                  value={raw_on_fill}\r\n                  onChange={(e) => setRaw_on_fill(e.target.value.trim())}\r\n                  type=\"text\"\r\n                  placeholder=\"ex. --acc-h: #fff; --acc-sub: #f4f;\"\r\n                ></input>\r\n              </>\r\n            )}\r\n\r\n            {types.find((item) => item.type === \"select\" && item.value) !==\r\n              undefined && (\r\n              <>\r\n                {options.length > 0 && (\r\n                  <>\r\n                    <p className=\"head\">Default option</p>\r\n                    <div className=\"radioContainer\">\r\n                      {options.map((item, id) => (\r\n                        <div key={id}>\r\n                          <input\r\n                            id={`option${id}`}\r\n                            type=\"radio\"\r\n                            name=\"configOption\"\r\n                            value={item.name}\r\n                            checked={item.name === defaultOption}\r\n                            onChange={(e) => changeOption(e)}\r\n                          />\r\n                          <label htmlFor={`option${id}`}>{item.name}</label>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <p className=\"head\">Options</p>\r\n                    <div className=\"optionList\">\r\n                      {options.map((option, id) => (\r\n                        <div className=\"optionItem\" key={id}>\r\n                          <div className=\"optionItemTitle\">{option.name}</div>\r\n\r\n                          <div className=\"optionItemActions\">\r\n                            <i\r\n                              onClick={() => {\r\n                                setFocusIndex(id);\r\n                                setFocusOption(option);\r\n                                setEditOption(true);\r\n                              }}\r\n                              className=\"ri-pencil-fill\"\r\n                            ></i>\r\n                            <i\r\n                              onClick={() => deleteOption(option.name)}\r\n                              className=\"ri-delete-bin-line\"\r\n                            ></i>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                <button onClick={() => setAddOption(true)}>\r\n                  <i className=\"ri-menu-add-line\"></i>Add{\" \"}\r\n                  {options.length > 2 ? \"More\" : \"Option\"}\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            {types.find((item) => item.type === \"color\" && item.value) !==\r\n              undefined && (\r\n              <>\r\n                <p className=\"head\">Default color</p>\r\n                <ChromePicker\r\n                  color={defaultColor}\r\n                  onChangeComplete={(e) => setColor(e)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && name !== \"\" && configOK() && (\r\n              <button onClick={addConfig}>\r\n                <i className=\"ri-save-2-line\"></i>Save\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showAddOption && (\r\n        <AddOption\r\n          setShow={setAddOption}\r\n          options={options}\r\n          setOptions={setOptions}\r\n          setDefaultOption={setDefaultOption}\r\n        />\r\n      )}\r\n      {showEditOption && (\r\n        <EditOption\r\n          setShow={setEditOption}\r\n          options={options}\r\n          setOptions={setOptions}\r\n          defaultOption={defaultOption}\r\n          setDefaultOption={setDefaultOption}\r\n          focusOption={focusOption}\r\n          focusIndex={focusIndex}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./AddCredit.css\";\r\nimport AddLink from \"./AddLink\";\r\nimport EditLink from \"./EditLink\";\r\n\r\nexport default function EditCredit({\r\n  setShow,\r\n  credits,\r\n  setCredits,\r\n  focusCreditIndex,\r\n  focusCredit,\r\n}) {\r\n  const [err, setErr] = useState(false);\r\n  const [errMsg, setMsg] = useState(\"\");\r\n  const [name, setName] = useState(() => focusCredit.name);\r\n  const [links, setLinks] = useState(() => focusCredit.contacts);\r\n  const [focusIndex, setFocusIndex] = useState(0);\r\n  const [focusLink, setFocusLink] = useState({});\r\n  const [showAddLink, setAddLink] = useState(false);\r\n  const [showEditLink, setEditLink] = useState(false);\r\n\r\n  const setNameState = (e) => {\r\n    setName(e.target.value.trim());\r\n    const exists = credits.find((item, index) => {\r\n      if (focusCreditIndex !== index) {\r\n        return (\r\n          item.name.toLowerCase().trim() === e.target.value.toLowerCase().trim()\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n    if (exists) {\r\n      setErr(true);\r\n      setMsg(\"Same credit already exists\");\r\n    } else {\r\n      setErr(false);\r\n    }\r\n  };\r\n\r\n  const editCredit = () => {\r\n    const nCredit = credits.map((item, index) => {\r\n      if (focusCreditIndex === index) {\r\n        item.name = name.trim();\r\n        item.contacts = links;\r\n      }\r\n      return item;\r\n    });\r\n\r\n    setCredits(nCredit);\r\n    resetData();\r\n    setShow(false);\r\n  };\r\n\r\n  const removeReference = (index) => {\r\n    const nLinks = links.map((item) => item);\r\n    nLinks.splice(index, 1);\r\n    setLinks(nLinks);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setErr(false);\r\n    setMsg(\"\");\r\n    setName(focusCredit.name);\r\n    setLinks(focusCredit.contacts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"container addcredit\">\r\n          <div className=\"modalHeader\">\r\n            <h4>Edit Credit</h4>\r\n            <i\r\n              className=\"ri-close-line\"\r\n              onClick={() => {\r\n                setShow(false);\r\n              }}\r\n            ></i>\r\n          </div>\r\n\r\n          <p className=\"head\">Name of credit</p>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => {\r\n              setNameState(e);\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Write here\"\r\n          />\r\n\r\n          <p className={`modalStatus ${err ? \"statusShow\" : \"\"}`}>\r\n            <i className=\"ri-error-warning-line\"></i>\r\n            {errMsg}\r\n          </p>\r\n\r\n          <p className=\"head\">References / Links</p>\r\n\r\n          <div className=\"linkLists\">\r\n            {links.map((link, index) => (\r\n              <div className=\"linkItem\" key={index}>\r\n                <div className=\"linkName\">{link.type}</div>\r\n                <div className=\"linkItemActions\">\r\n                  <i\r\n                    onClick={() => {\r\n                      setFocusIndex(index);\r\n                      setFocusLink(link);\r\n                      setEditLink(true);\r\n                    }}\r\n                    className=\"ri-pencil-fill\"\r\n                  ></i>\r\n                  <i\r\n                    onClick={() => removeReference(index)}\r\n                    className=\"ri-delete-bin-line\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={() => setAddLink(true)}>\r\n            Add {links.length < 1 ? \"Reference / Link\" : \"More\"}\r\n          </button>\r\n\r\n          <div className=\"modalBottomBar\">\r\n            <button onClick={resetData} className=\"reset\">\r\n              <i className=\"ri-restart-fill\"></i>Reset\r\n            </button>\r\n            {!err && name !== \"\" && (\r\n              <button onClick={editCredit}>\r\n                <i className=\"ri-save-2-line\"></i>Save\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showAddLink && (\r\n        <AddLink setShow={setAddLink} links={links} setLinks={setLinks} />\r\n      )}\r\n\r\n      {showEditLink && (\r\n        <EditLink\r\n          setShow={setEditLink}\r\n          links={links}\r\n          setLinks={setLinks}\r\n          focusIndex={focusIndex}\r\n          focusLink={focusLink}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from \"file-saver\";\r\n\r\nconst getValue = (item) => {\r\n  if (item.type === \"select\") {\r\n    const option = item.options.find((i) => i.name === item.default);\r\n    if (!option) return \"\";\r\n    return `${item.var}: ${option.value};\r\n${option.raw_value ? option.raw_value : \"\"}`;\r\n  } else if (item.type === \"imageURL\") {\r\n    return item.default ? `${item.var}: url(\"${item.default}\");` : \"\";\r\n  }\r\n\r\n  return item.default ? `${item.var}: ${item.default};` : \"\";\r\n};\r\n\r\nconst getFirstState = (value) => {\r\n  return value.map((item) => {\r\n    return {\r\n      ...item,\r\n      value: item.default ? getValue(item) : \"\",\r\n      val: item.default ? item.default : \"\",\r\n      show: false,\r\n    };\r\n  });\r\n};\r\n\r\nexport const sleep = (ms) => {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n};\r\n\r\n// Credit,\r\n// https://github.com/casesandberg/react-color/issues/750#issuecomment-684882202\r\nexport const decimalToHex = (alpha) => {\r\n  let aHex = Math.round(255 * alpha).toString(16);\r\n  return alpha === 0 ? \"00\" : aHex.length < 2 ? `0${aHex}` : aHex;\r\n};\r\n\r\nexport default function Preview({ value, main, name, closePreview }) {\r\n  const [state, setState] = useState(() => getFirstState(value));\r\n  const [onProcess, setProcess] = useState(false);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [status, setStatus] = useState(true);\r\n  const [msg, setMsg] = useState(\"Processing\");\r\n\r\n  const setColor = (e, i) => {\r\n    const color = `${e.hex}${decimalToHex(e.rgb.a)}`;\r\n    const nState = state.map((item) => {\r\n      item.val = item.title === i.title ? color : item.val;\r\n      item.value =\r\n        item.title === i.title ? `${item.var}: ${item.val};` : item.value;\r\n      return item;\r\n    });\r\n    setState(nState);\r\n  };\r\n\r\n  const setValue = (e, i) => {\r\n    const nState = state.map((item) => {\r\n      item.val = item.title === i.title ? e.target.value.trim() : item.val;\r\n\r\n      if (item.type === \"imageURL\") {\r\n        item.value =\r\n          item.title === i.title\r\n            ? `${item.var}: url(\"${item.val}\");`\r\n            : item.value;\r\n      } else {\r\n        item.value =\r\n          item.title === i.title ? `${item.var}: ${item.val};` : item.value;\r\n      }\r\n      return item;\r\n    });\r\n    setState(nState);\r\n  };\r\n\r\n  const setOption = (e, i, o) => {\r\n    const selected = e.target.value;\r\n\r\n    const nState = state.map((item) => {\r\n      item.val = item.title === i.title ? selected : item.val;\r\n      item.value =\r\n        item.title === i.title\r\n          ? `${item.var}: ${o.value};\\n${o.raw_value ? o.raw_value : \"\"}`\r\n          : item.value;\r\n      return item;\r\n    });\r\n    setState(nState);\r\n  };\r\n\r\n  const genarateConfig = async () => {\r\n    setPercentage(0);\r\n    setStatus(true);\r\n    setProcess(true);\r\n    setMsg(\"\");\r\n    await sleep(200);\r\n\r\n    try {\r\n      setPercentage(4);\r\n      setMsg(\"Setting up configs\");\r\n      await sleep(1000);\r\n      let text = \"\";\r\n      state.map((item) => {\r\n        text += item.val ? `\\n${item.value}` : \"\";\r\n\r\n        if (item.type === \"imageURL\") {\r\n          if (!item.val && item.raw_value_on_empty) {\r\n            text += \"\\n\" + item.raw_value_on_empty;\r\n          }\r\n\r\n          if (item.val && item.raw_value_on_fill) {\r\n            text += \"\\n\" + item.raw_value_on_fill;\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n      setPercentage(7);\r\n\r\n      setMsg(\"Downloading resources\");\r\n      const response = await axios.get(main.target_url, {\r\n        responseType: \"arraybuffer\",\r\n      });\r\n      setPercentage(30);\r\n\r\n      if (main.target_type === \"zip\") {\r\n        setMsg(\"Processing Zip\");\r\n        const zip = new JSZip();\r\n        await zip.loadAsync(response.data);\r\n        setPercentage(52);\r\n\r\n        const prebuiltContent = await zip.file(main.target_file).async(\"text\");\r\n        const newContent = prebuiltContent + `\\n/*Overrides*/\\n:root{${text}}`;\r\n        setPercentage(79);\r\n\r\n        zip.file(main.target_file, newContent);\r\n        setPercentage(86);\r\n\r\n        const content = await zip.generateAsync({ type: \"blob\" });\r\n        setPercentage(95);\r\n\r\n        saveAs(content, `${name}_CSS.zip`);\r\n      }\r\n\r\n      if (main.target_type === \"css\") {\r\n        const textDecoder = new TextDecoder(\"utf-8\");\r\n        const textEncoder = new TextEncoder();\r\n\r\n        let css = textDecoder.decode(new Uint8Array(response.data));\r\n        setPercentage(57);\r\n        const newContent = css + `\\n/*Overrides*/\\n:root{${text}}`;\r\n        setPercentage(95);\r\n\r\n        saveAs(new Blob([textEncoder.encode(newContent)]), \"main_custom.css\");\r\n      }\r\n\r\n      setPercentage(100);\r\n      setStatus(true);\r\n      setMsg(\"Done. Thank you for using krunker css tool\");\r\n    } catch (err) {\r\n      setStatus(false);\r\n      setMsg(err.message);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setProcess(false);\r\n    }, 4000);\r\n  };\r\n\r\n  const expand = (title, value) => {\r\n    setState(\r\n      state.map((item) => {\r\n        item.show = item.title === title ? !item.show : item.show;\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Work\">\r\n        {!onProcess ? (\r\n          <>\r\n            {state.map((item, id) => (\r\n              <div className=\"config\" key={id}>\r\n                <div\r\n                  className={`configMinItem ${item.show && \"show\"}`}\r\n                  onClick={() => expand(item.title, !item.show)}\r\n                >\r\n                  <h3>{item.title}</h3>\r\n                  {item.description && (\r\n                    <p className=\"description\">{item.description}</p>\r\n                  )}\r\n                </div>\r\n\r\n                {item.show && (\r\n                  <div className=\"configMaxItem\">\r\n                    <div className=\"inputContainer\">\r\n                      <h4>Change Value</h4>\r\n                      {item.type === \"color\" && (\r\n                        <ChromePicker\r\n                          color={item.val}\r\n                          onChangeComplete={(e) => setColor(e, item)}\r\n                        />\r\n                      )}\r\n\r\n                      <div>\r\n                        {item.type === \"select\" &&\r\n                          item.options.map((option, id) => (\r\n                            <div key={id} style={{ marginBottom: \"1rem\" }}>\r\n                              <input\r\n                                onChange={(e) => setOption(e, item, option)}\r\n                                checked={\r\n                                  item.val === option.name ? true : false\r\n                                }\r\n                                id={item.var + option.name}\r\n                                type=\"radio\"\r\n                                name={item.title}\r\n                                value={option.name}\r\n                              />\r\n                              <label htmlFor={item.var + option.name}>\r\n                                {option.name}\r\n                              </label>\r\n                            </div>\r\n                          ))}\r\n                      </div>\r\n\r\n                      {item.type === \"imageURL\" && (\r\n                        <input\r\n                          onChange={(e) => setValue(e, item)}\r\n                          id={item.var}\r\n                          type=\"text\"\r\n                          value={item.val}\r\n                          placeholder=\"Image URL\"\r\n                        />\r\n                      )}\r\n                    </div>\r\n\r\n                    {item.hint_image && (\r\n                      <div className=\"hint\">\r\n                        <img src={item.hint_image} alt={item.title}></img>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <div>\r\n            <div className=\"loadingBar\">\r\n              <div\r\n                className=\"loading\"\r\n                style={{ width: `${percentage}%` }}\r\n              ></div>\r\n            </div>\r\n            <p\r\n              className=\"loadingMsg\"\r\n              style={{ color: `${status ? \"green\" : \"red\"}` }}\r\n            >\r\n              {msg}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {!onProcess && (\r\n        <div className=\"downloadBar\">\r\n          <div className=\"wrapper\">\r\n            <button onClick={() => closePreview(!true)} className=\"test\">\r\n              <i className=\"ri-stop-circle-line\"></i> Close Preview\r\n            </button>\r\n            <button onClick={genarateConfig} className=\"download\">\r\n              <i className=\"ri-download-cloud-2-line\"></i> Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ConfigHeader.css\";\r\n\r\nexport default function ConfigHeader() {\r\n  return (\r\n    <div className=\"configHeader\">\r\n      <p className=\"configHead\">CSS TOOL CONFIGURATOR</p>\r\n      <p>\r\n        Csstool configurator for krunker css devs. If you want to add your css\r\n        into csstool and if you dont know how to do that. This is the\r\n        configurator for csstool. You have to fill all the neccessary\r\n        information about your css and then export config and send it to me. I\r\n        will verify that then I will add that into csstool.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loader from \"../Components/Loader\";\r\nimport AddConfig from \"../Modals/AddConfig\";\r\nimport AddCredit from \"../Modals/AddCredit\";\r\nimport EditConfig from \"../Modals/EditConfig\";\r\nimport EditCredit from \"../Modals/EditCredit\";\r\nimport { sleep } from \"../Sections/Work\";\r\nimport { scan_config } from \"../Utils/utils\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"./ConfigCreate.css\";\r\nimport Preview from \"../Sections/Preview\";\r\nimport Info from \"../Sections/Info\";\r\nimport ConfigHeader from \"../Sections/ConfigHeader\";\r\n\r\nconst getBase = () => ({\r\n  name: \"\",\r\n  logo: \"\",\r\n  cover: \"\",\r\n  description: \"\",\r\n  repo: \"\",\r\n  site: \"\",\r\n});\r\n\r\nconst getMain = () => ({\r\n  target_type: \"css\",\r\n  target_url: \"\",\r\n  target_file: \"\",\r\n});\r\n\r\nexport const stack = (index, upStack, arr, setArr) => {\r\n  const nArr = arr.map((item) => item);\r\n\r\n  if ((upStack && index > 0) || (!upStack && index < nArr.length - 1)) {\r\n    const indexInc = upStack ? index - 1 : index + 1;\r\n    const tmp = nArr[indexInc];\r\n    nArr[indexInc] = nArr[index];\r\n    nArr[index] = tmp;\r\n    setArr(nArr);\r\n  }\r\n};\r\n\r\nexport default function ConfigCreate() {\r\n  const [data, setData] = useState(null);\r\n  const [base, setBase] = useState(() => getBase());\r\n  const [main, setMain] = useState(() => getMain());\r\n\r\n  const [credits, setCredits] = useState([]);\r\n  const [configs, setConfigs] = useState([]);\r\n  const [showAddCredit, setAddCredit] = useState(false);\r\n  const [showEditCredit, setEditCredit] = useState(false);\r\n  const [showAddConfig, setAddConfig] = useState(false);\r\n  const [showEditConfig, setEditConfig] = useState(false);\r\n  const [showLoadPanel, setLoadPanel] = useState(false);\r\n\r\n  const [focusCreditIndex, setFocusCreditIndex] = useState(0);\r\n  const [focusCredit, setFocusCredit] = useState(0);\r\n\r\n  const [focusConfigIndex, setFocusConfigIndex] = useState(0);\r\n  const [focusConfig, setFocusConfig] = useState(0);\r\n\r\n  // Local Saving states\r\n  const [localSaving, setLocalSaving] = useState(false);\r\n  const [configOk, setConfigOk] = useState(false);\r\n\r\n  // Preview\r\n  const [showPreview, setPreview] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setMain(data.main);\r\n      setBase({\r\n        name: data.base.name,\r\n        logo: data.base.logo,\r\n        cover: data.base.cover,\r\n        description: data.base.description,\r\n        repo: data.base.repo,\r\n        site: data.base.site,\r\n      });\r\n      setCredits(data.base.credits);\r\n      setConfigs(data.configs);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const raw = {\r\n      base: { ...base, credits },\r\n      main,\r\n      configs,\r\n    };\r\n\r\n    setConfigOk(scan_config(raw).success);\r\n  }, [main, base, configs, credits]);\r\n\r\n  const getConfig = () => {\r\n    return { base: { ...base, credits }, main, configs };\r\n  };\r\n\r\n  const saveIntoLocal = async () => {\r\n    setLocalSaving(true);\r\n    await sleep(1000);\r\n    localStorage.setItem(\"css_config\", JSON.stringify(getConfig()));\r\n    setLocalSaving(false);\r\n  };\r\n\r\n  const exportConfig = () => {\r\n    const textEncoder = new TextEncoder();\r\n\r\n    saveAs(\r\n      new Blob([textEncoder.encode(JSON.stringify(getConfig()))]),\r\n      `${base.name}_css_config.json`\r\n    );\r\n  };\r\n\r\n  const removeCredit = (name) => {\r\n    let rIndex = credits.findIndex((item) => item.name === name);\r\n    const nCredits = credits.map((item) => item);\r\n    nCredits.splice(rIndex, 1);\r\n    setCredits(nCredits);\r\n  };\r\n\r\n  const removeConfig = (title) => {\r\n    let rIndex = configs.findIndex((item) => item.title === title);\r\n    const nConfig = configs.map((item) => item);\r\n    nConfig.splice(rIndex, 1);\r\n    setConfigs(nConfig);\r\n  };\r\n\r\n  const stackCredit = (name, upStack = true) => {\r\n    const currIndex = credits.findIndex((item) => item.name === name);\r\n    stack(currIndex, upStack, credits, setCredits);\r\n  };\r\n\r\n  const stackConfig = (title, upStack = true) => {\r\n    const currIndex = configs.findIndex((item) => item.title === title);\r\n    stack(currIndex, upStack, configs, setConfigs);\r\n  };\r\n\r\n  const resetData = () => {\r\n    setBase(getBase());\r\n    setMain(getMain());\r\n    setCredits([]);\r\n    setConfigs([]);\r\n    setData(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showPreview && (\r\n        <>\r\n          <Info css={{ ...base, credits }} />{\" \"}\r\n          <Preview\r\n            value={configs}\r\n            main={main}\r\n            name={base.name}\r\n            closePreview={setPreview}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {!showPreview && (\r\n        <>\r\n          <ConfigHeader />\r\n          <div className=\"configSection\">\r\n            {/* Base Details */}\r\n            <div className=\"baseConfig\">\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">CSS Name</p>\r\n                <input\r\n                  value={base.name}\r\n                  onChange={(e) => {\r\n                    setBase({ ...base, name: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required={true}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">\r\n                  CSS Logo <span>(Optional)</span>\r\n                </p>\r\n\r\n                <input\r\n                  value={base.logo}\r\n                  onChange={(e) => {\r\n                    setBase({ ...base, logo: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Logo Image Url\"\r\n                  required={false}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">\r\n                  About CSS <span>(Optional)</span>\r\n                </p>\r\n                <textarea\r\n                  value={base.description}\r\n                  onChange={(e) => {\r\n                    setBase({ ...base, description: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Description\"\r\n                  required={false}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">\r\n                  Cover Image <span>(Optional)</span>\r\n                </p>\r\n                <input\r\n                  value={base.cover}\r\n                  onChange={(e) => {\r\n                    setBase({ ...base, cover: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Cover Image Url\"\r\n                  required={false}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">\r\n                  Repository Link <span>(Optional)</span>\r\n                </p>\r\n\r\n                <input\r\n                  value={base.repo}\r\n                  onChange={(e) => {\r\n                    setBase({ ...base, repo: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Github Repo Link\"\r\n                  required={false}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">\r\n                  Website if available <span>(Optional)</span>\r\n                </p>\r\n                <input\r\n                  value={base.site}\r\n                  onChange={(e) => {\r\n                    setBase({ ...base, site: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder=\"Website Url\"\r\n                  required={false}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"configItem configIn\">\r\n                <p className=\"configHead\">\r\n                  Credits <span>(Optional)</span>\r\n                </p>\r\n                {credits.length < 1 ? (\r\n                  <div\r\n                    onClick={() => setAddCredit(true)}\r\n                    className=\"emptyCredit\"\r\n                  >\r\n                    No credits here.<br></br>Add one\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"configList\">\r\n                    {credits.map((item, id) => (\r\n                      <div key={id} className=\"configInItem\">\r\n                        <div className=\"configInItemInfo\">\r\n                          <i className=\"ri-pencil-ruler-2-fill\"></i>\r\n                          {item.name}\r\n                        </div>\r\n                        <div className=\"configInItemActions\">\r\n                          <i\r\n                            onClick={() => removeCredit(item.name)}\r\n                            className=\"ri-delete-bin-2-line\"\r\n                          ></i>\r\n                          <i\r\n                            onClick={() => {\r\n                              setFocusCreditIndex(id);\r\n                              setFocusCredit(item);\r\n                              setEditCredit(true);\r\n                            }}\r\n                            className=\"ri-edit-2-fill\"\r\n                          ></i>\r\n                          {credits.length > 1 && (\r\n                            <>\r\n                              <i\r\n                                onClick={() => stackCredit(item.name)}\r\n                                className=\"ri-arrow-up-s-line\"\r\n                              ></i>\r\n                              <i\r\n                                onClick={() => stackCredit(item.name, false)}\r\n                                className=\"ri-arrow-down-s-line\"\r\n                              ></i>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    <div\r\n                      onClick={() => setAddCredit(true)}\r\n                      key=\"addmore\"\r\n                      className=\"configInItem add\"\r\n                    >\r\n                      <div className=\"configInItemInfo\">\r\n                        <i className=\"ri-menu-add-line\"></i>\r\n                        Add More\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"configItem configIn\">\r\n                <p className=\"configHead\">Configurations</p>\r\n                {configs.length < 1 ? (\r\n                  <div\r\n                    onClick={() => setAddConfig(true)}\r\n                    className=\"emptyCredit\"\r\n                  >\r\n                    You didn't add configuation yet.<br></br>Add one or more\r\n                    configuration depending on your css.\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"configList\">\r\n                    {configs.map((item, id) => (\r\n                      <div key={id} className=\"configInItem\">\r\n                        <div className=\"configInItemInfo\">\r\n                          {item.type === \"color\" && (\r\n                            <i className=\"ri-brush-2-fill\"></i>\r\n                          )}\r\n\r\n                          {item.type === \"imageURL\" && (\r\n                            <i className=\"ri-image-2-fill\"></i>\r\n                          )}\r\n\r\n                          {item.type === \"select\" && (\r\n                            <i className=\"ri-checkbox-multiple-fill\"></i>\r\n                          )}\r\n\r\n                          {item.title}\r\n                        </div>\r\n                        <div className=\"configInItemActions\">\r\n                          <i\r\n                            onClick={() => removeConfig(item.title)}\r\n                            className=\"ri-delete-bin-2-line\"\r\n                          ></i>\r\n                          <i\r\n                            onClick={() => {\r\n                              setFocusConfigIndex(id);\r\n                              setFocusConfig(item);\r\n                              setEditConfig(true);\r\n                            }}\r\n                            className=\"ri-edit-2-fill\"\r\n                          ></i>\r\n                          {configs.length > 1 && (\r\n                            <>\r\n                              <i\r\n                                onClick={() => stackConfig(item.title)}\r\n                                className=\"ri-arrow-up-s-line\"\r\n                              ></i>\r\n                              <i\r\n                                onClick={() => stackConfig(item.title, false)}\r\n                                className=\"ri-arrow-down-s-line\"\r\n                              ></i>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    <div\r\n                      onClick={() => setAddConfig(true)}\r\n                      key=\"addmore\"\r\n                      className=\"configInItem add\"\r\n                    >\r\n                      <div className=\"configInItemInfo\">\r\n                        <i className=\"ri-menu-add-line\"></i>\r\n                        Add More\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"configItem\">\r\n                <p className=\"configHead\">Target Type</p>\r\n                <div className=\"radioContainer\">\r\n                  <input\r\n                    id=\"zip\"\r\n                    type=\"radio\"\r\n                    name=\"target_type\"\r\n                    value=\"zip\"\r\n                    onChange={() => setMain({ ...main, target_type: \"zip\" })}\r\n                    checked={main.target_type === \"zip\"}\r\n                  />\r\n                  <label htmlFor=\"zip\">Zip</label>\r\n                  <input\r\n                    id=\"css\"\r\n                    type=\"radio\"\r\n                    name=\"target_type\"\r\n                    value=\"css\"\r\n                    onChange={() => setMain({ ...main, target_type: \"css\" })}\r\n                    checked={main.target_type === \"css\"}\r\n                  />\r\n                  <label htmlFor=\"css\">CSS</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"configItem\" style={{ gridColumn: \"1 / span 1\" }}>\r\n                <p className=\"configHead\">\r\n                  Target{\" \"}\r\n                  <span>\r\n                    (Use only public origin urls like raw.githubusercontent)\r\n                  </span>\r\n                </p>\r\n                <input\r\n                  value={main.target_url}\r\n                  onChange={(e) => {\r\n                    setMain({ ...main, target_url: e.target.value });\r\n                  }}\r\n                  type=\"text\"\r\n                  placeholder={`${\r\n                    main.target_type === \"css\" ? \"Css Url\" : \"Zip Url\"\r\n                  }`}\r\n                  required={false}\r\n                />\r\n              </div>\r\n              {main.target_type === \"zip\" && (\r\n                <div\r\n                  className=\"configItem\"\r\n                  style={{ gridColumn: \"2 / span 1\" }}\r\n                >\r\n                  <p className=\"configHead\">Target File</p>\r\n                  <input\r\n                    value={main.target_file}\r\n                    onChange={(e) => {\r\n                      setMain({ ...main, target_file: e.target.value });\r\n                    }}\r\n                    type=\"text\"\r\n                    placeholder=\"ex. css/main.custom.css\"\r\n                    required={false}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"downloadBar\">\r\n            {showLoadPanel && (\r\n              <Loader setShow={setLoadPanel} setData={setData} />\r\n            )}\r\n            <div className=\"wrapper\">\r\n              <button onClick={resetData} className=\"reset\">\r\n                <i className=\"ri-restart-fill\"></i>Reset\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setLoadPanel(true);\r\n                }}\r\n                className=\"load\"\r\n              >\r\n                <i className=\"ri-loader-4-line\"></i>Load\r\n              </button>\r\n\r\n              {configOk && (\r\n                <>\r\n                  <button onClick={() => setPreview(true)} className=\"test\">\r\n                    <i className=\"ri-flask-fill\"></i>Test\r\n                  </button>\r\n                  <button\r\n                    className={`save ${localSaving ? \"busy\" : \"\"}`}\r\n                    onClick={saveIntoLocal}\r\n                  >\r\n                    <i className=\"ri-window-fill\"></i>{\" \"}\r\n                    {localSaving ? \"Saving\" : \"Save Local\"}\r\n                  </button>\r\n\r\n                  <button className=\"download\" onClick={exportConfig}>\r\n                    <i className=\"ri-download-cloud-2-line\"></i> Export\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {showAddCredit && (\r\n            <AddCredit\r\n              setShow={setAddCredit}\r\n              credits={credits}\r\n              setCredits={setCredits}\r\n            />\r\n          )}\r\n\r\n          {showEditCredit && (\r\n            <EditCredit\r\n              setShow={setEditCredit}\r\n              credits={credits}\r\n              setCredits={setCredits}\r\n              focusCredit={focusCredit}\r\n              focusCreditIndex={focusCreditIndex}\r\n            />\r\n          )}\r\n\r\n          {showAddConfig && (\r\n            <AddConfig\r\n              setShow={setAddConfig}\r\n              configs={configs}\r\n              setConfigs={setConfigs}\r\n            />\r\n          )}\r\n\r\n          {showEditConfig && (\r\n            <EditConfig\r\n              setShow={setEditConfig}\r\n              configs={configs}\r\n              setConfigs={setConfigs}\r\n              focusConfig={focusConfig}\r\n              focusConfigIndex={focusConfigIndex}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About({ setShow }) {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"container\">\r\n        <div className=\"modalHeader\">\r\n          <h4>About</h4>\r\n          <i\r\n            className=\"ri-close-line\"\r\n            onClick={() => {\r\n              setShow(false);\r\n            }}\r\n          ></i>\r\n        </div>\r\n        <h1>\r\n          <i className=\"ri-pencil-ruler-2-line\"></i>Krunker CSS Tool\r\n        </h1>\r\n        <p>\r\n          This tool created for krunker css lovers who can customize their\r\n          fevorite css without modifying the code.\r\n        </p>\r\n\r\n        <p className=\"head\">v 0.1 ALPHA</p>\r\n        <p>This tool currently in beta. More css support coming soon.</p>\r\n\r\n        <p className=\"head\">Credits</p>\r\n        <p>\r\n          <ul>\r\n            <li>Team MOF1</li>\r\n            <li>CSS Devs</li>\r\n            <li>Krunker Community</li>\r\n          </ul>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport About from \"../Modals/About\";\r\nimport \"./Nav.css\";\r\n\r\nexport default function Nav() {\r\n  const location = useLocation();\r\n  const [showAbout, setAbout] = useState(false);\r\n\r\n  const openAbout = (e) => {\r\n    e.preventDefault();\r\n    setAbout(true);\r\n  };\r\n\r\n  return (\r\n    <nav id=\"deskNav\">\r\n      <a href=\"https://MOF1.github.io\">Home</a>\r\n      {location.pathname !== \"/\" && (\r\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n          CSS List\r\n        </Link>\r\n      )}\r\n\r\n      <a\r\n        href=\"\"\r\n        onClick={(e) => {\r\n          openAbout(e);\r\n        }}\r\n      >\r\n        About\r\n      </a>\r\n      {showAbout && <About setShow={setAbout} />}\r\n    </nav>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport CssList from \"./Sections/CssList\";\nimport Config from \"./Page/Config\";\nimport ConfigCreate from \"./Page/ConfigCreate\";\nimport Nav from \"./Sections/Nav\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route exact path=\"/config/create\">\n            <ConfigCreate />\n          </Route>\n          <Route exact path=\"/:css_name\">\n            <Config />\n          </Route>\n          <Route exact path=\"/\">\n            <CssList />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"remixicon/fonts/remixicon.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}